:root {
    font-size: 10px;
    font-family: 'Roboto', sans-serif;

    --main-text-color: #212121;
    --background-color: #FFF;
    --container-height: 10rem;
    --container-width: 50vw;
    --translate-header: -70vw;
    --perspective-x: 10vw;
}

.theme--dark.v-application {
    background: #212121 !important;
}

.theme--light.v-application {
    background: #263238 !important;
}

.start {
    display: flex;
    height: 100vh;
    width: 100%;
    transition: box-shadow 0.3s ease;
    flex-direction: column-reverse;
    position: sticky;
    top: calc(-100vh + 0.8*var(--container-height));   
    //background-color: var(--background-color);
    z-index: 3000;
}

.face {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    perspective: var(--container-width);
    perspective-origin: center center;
    transition: perpective-origin 0.5s ease,
                height 0.3s ease;
}
.navigation {
    height: var(--container-height);
    width: var(--container-width);
    transition: transform 0.5s ease;  
    transform-style: preserve-3d;
    background: inherit;
}
.wrapper {
    height: var(--container-height);
    width: var(--container-width);
    transform-style: preserve-3d;
    background: inherit;
        
    &.in {
        animation: rotateZ 3s 2s infinite ease-in-out alternate;
    }
    
    &.out {
        animation: rotateX 3s 2s infinite ease-in-out alternate;
    }
}

.side {
    position: absolute;
    height: var(--container-height);
    width: var(--container-width);
    //background: var(--background-color);
    background: inherit;    
}

.back {
    transform: translateZ(calc(var(--container-height)*(-1/2))) rotateX(180deg);
}
.front {
    transform: translateZ(calc(var(--container-height)*1/2));
}
.top {
    transform: translateY(calc(var(--container-height)*(-1/2))) rotateX(90deg);
}
.bottom {
    transform: translateY(calc(var(--container-height)*1/2)) rotateX(90deg);
}

.containerm {
    display: flex;
    position: relative;
    height: var(--container-height);
    width: var(--container-width);
}

.containerm.main {  
    --width-symbol: calc(1/7*var(--container-width));
    animation: move-container 1.5s 0.5s ease-out both;
}
.containerm span, .containerm .text{
    display: flex;
    width: var(--width-symbol); 
    align-items: center;
    justify-content: center;
    font-size: 5em;
    //color: var(--main-text-color);
}
.containerm .text {
    width: 100%;
    height: 100%;
}
@for $i from 1 through 7 {
    .containerm {
    span:nth-child(#{$i}) {
        $coef: 1;
        $coefX: 500rem;
        $coefY: 50rem;
        
        @if ($i%2 == 0) {
            --move-y: calc(-1*(#{$i} - #{$coef})*#{$coefY});
        } @else {
            --move-y: calc((#{$i} - #{$coef})*#{$coefY});
        }
    
        --move-x: calc((#{$i} - #{$coef})*#{$coefX});
        
        @if ($i == 1) {
            animation: signs-flight 1.5s 0.5s ease backwards;
        } @else {
            animation: signs-flight 1.5s 0.5s ease backwards;
        }
    }
    }
}

@keyframes signs-flight {
    0% {
        transform: translateX(var(--move-x)) 
                translateY(var(--move-y))
                rotateZ(0)
                scale(1);
    }
    
    25% {
        transform: translateX(calc(var(--move-x)*(-1/5)))
                translateY(calc(var(--move-y)*(-1/10)))
                rotateZ(50deg)
                scale(1);
    }
    
    60% {
        transform: translateX(calc(var(--move-x)*1/10))
                translateY(calc(var(--move-y)*1/20))
                rotateZ(-30deg)
                scale(0.9);
    }

    100% {
        transform: translateX(0) 
                translateY(0)
                rotateZ(0)
                scale(1);
    }
}

@keyframes move-container {
    0%, 60% {
        transform: translateX(calc(var(--width-symbol)*3));
    }
    
    100% {
        transform: translateX(0);
    }
}

@keyframes rotateZ {
    0%,15% {
        transform: rotateZ(0deg) translateX(0rem) translateY(0rem);
    }
    
    50% {
        transform: rotateZ(3deg) translateX(2rem) translateY(2rem);
    }
    
    100% {
        transform: rotateZ(-3deg) translateX(-2rem) translateY(-2rem);
    }
}

@keyframes rotateX {
    0%,15% {
        transform: rotateX(0deg) translateZ(0rem);
    }
    
    50% {
        transform: rotateX(3deg) translateZ(1rem);
    }
    
    100% {
        transform: rotateX(-3deg) translateZ(-1rem);
    }
}

@media screen and (max-device-width: 600px) {
    :root {
      --translate-header: -50vw;
      --perspective-x: 10vw;
      --container-width: 80vw;
    }
  }